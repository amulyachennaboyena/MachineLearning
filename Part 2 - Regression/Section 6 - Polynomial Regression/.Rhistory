demo()
help()
library(readr)
Data <- read_csv("Documents/Machine Learning A-Z Template Folder/Part 1 - Data Preprocessing/Data.csv")
View(Data)
setwd("~/Documents/Machine Learning A-Z Template Folder/Part 1 - Data Preprocessing")
dataset = read.csv('Data.csv')
View(dataset)
dataset$Age = ifelse(is.na(dataset$Age),ave(dataset$Age,FUN = function(x) mean(x, na.rm = TRUE)),dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),ave(dataset$Salary,FUN = function(x) mean(x, na.rm = TRUE)),dataset$Salary)
# Encoding categorial data
dataset$Country = factor(dataset$Country,levels = c('France','Spain','Germany'),)
dataset$Country = factor(dataset$Country,levels = c('France','Spain','Germany'),labels = c(1,2,3))
dataset$Purchased = factor(dataset$Purchased,levels = c('No','Yes'),labels = c(1,2,3))
dataset$Purchased = factor(dataset$Purchased,levels = c('No','Yes'),labels = c(0,1))
install.packages('caTools')
library("caTools", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
set.seed(123)
split = sample.split(dataset$Purchased,SplitRatio = 0.8)
training_set = subset(dataset,split == TRUE)
test_set = subset(dataset,split == FALSE)
training_set[, 2:3] = scale(training_set)
test_set = scale(test_set)
training_set[, 2:3] = scale(training_set[, 2:3])
test_set[,2:3] = scale(test_set[, 2:3])
setwd("~/Documents/Machine Learning A-Z Template Folder/Part 3 - Classification/Section 15 - K-Nearest Neighbors (K-NN)")
setwd("~/Documents/Machine Learning A-Z Template Folder/Part 2 - Regression/Section 6 - Polynomial Regression")
dataset = read.csv('Position_Salaries.csv')
View(dataset)
View(dataset)
dataset = dataset[2:3]
dataset = dataset[2:3]
dataset = dataset[2:3]
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
View(dataset)
View(dataset)
lin_reg = lm(formula = Salary ~ .,
data = dataset)
dataset$Level2 = dataset$Level^2
poly_reg = lm(formula = Salary ~ .,
data = dataset)
dataset$Level3 = dataset$Level^3
poly_reg = lm(formula = Salary ~ .,
data = dataset)
install.packages('ggplot2')
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red')
geom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Linear Regression)') +
xlab('Level') +
ylab('Salary')
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Linear Regression)') +
xlab('Level') +
ylab('Salary')
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Linear Regression)') +
xlab('Level') +
ylab('Salary')
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
dataset$Level4 = dataset$Level^4
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
y_pred = predict(lin_reg, data.frame(Level = 6.5))
y_pred = predict(poly_reg, data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3
Level4 = 6.5^4))
y_pred = predict(poly_reg, data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
